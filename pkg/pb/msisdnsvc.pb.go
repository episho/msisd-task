// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.7.1
// source: msisdnsvc.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type MsisdnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msisdn string `protobuf:"bytes,1,opt,name=msisdn,proto3" json:"msisdn,omitempty"`
}

func (x *MsisdnRequest) Reset() {
	*x = MsisdnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msisdnsvc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsisdnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsisdnRequest) ProtoMessage() {}

func (x *MsisdnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_msisdnsvc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsisdnRequest.ProtoReflect.Descriptor instead.
func (*MsisdnRequest) Descriptor() ([]byte, []int) {
	return file_msisdnsvc_proto_rawDescGZIP(), []int{0}
}

func (x *MsisdnRequest) GetMsisdn() string {
	if x != nil {
		return x.Msisdn
	}
	return ""
}

type Msisdn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mno         string `protobuf:"bytes,1,opt,name=mno,proto3" json:"mno,omitempty"`
	Cdc         string `protobuf:"bytes,2,opt,name=cdc,proto3" json:"cdc,omitempty"`
	Sn          string `protobuf:"bytes,3,opt,name=sn,proto3" json:"sn,omitempty"`
	CountryCode string `protobuf:"bytes,4,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	CountryName string `protobuf:"bytes,5,opt,name=country_name,json=countryName,proto3" json:"country_name,omitempty"`
}

func (x *Msisdn) Reset() {
	*x = Msisdn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msisdnsvc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Msisdn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Msisdn) ProtoMessage() {}

func (x *Msisdn) ProtoReflect() protoreflect.Message {
	mi := &file_msisdnsvc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Msisdn.ProtoReflect.Descriptor instead.
func (*Msisdn) Descriptor() ([]byte, []int) {
	return file_msisdnsvc_proto_rawDescGZIP(), []int{1}
}

func (x *Msisdn) GetMno() string {
	if x != nil {
		return x.Mno
	}
	return ""
}

func (x *Msisdn) GetCdc() string {
	if x != nil {
		return x.Cdc
	}
	return ""
}

func (x *Msisdn) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

func (x *Msisdn) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *Msisdn) GetCountryName() string {
	if x != nil {
		return x.CountryName
	}
	return ""
}

var File_msisdnsvc_proto protoreflect.FileDescriptor

var file_msisdnsvc_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6d, 0x73, 0x69, 0x73, 0x64, 0x6e, 0x73, 0x76, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x06, 0x6d, 0x73, 0x69, 0x73, 0x64, 0x6e, 0x22, 0x27, 0x0a, 0x0d, 0x4d, 0x73, 0x69,
	0x73, 0x64, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x73,
	0x69, 0x73, 0x64, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x73, 0x69, 0x73,
	0x64, 0x6e, 0x22, 0x82, 0x01, 0x0a, 0x06, 0x4d, 0x73, 0x69, 0x73, 0x64, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x6e, 0x6f, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x64, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x64,
	0x63, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0x4a, 0x0a, 0x0d, 0x4d, 0x73, 0x69, 0x73, 0x64,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d,
	0x73, 0x69, 0x73, 0x64, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x15, 0x2e, 0x6d,
	0x73, 0x69, 0x73, 0x64, 0x6e, 0x2e, 0x4d, 0x73, 0x69, 0x73, 0x64, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x6d, 0x73, 0x69, 0x73, 0x64, 0x6e, 0x2e, 0x4d, 0x73, 0x69,
	0x73, 0x64, 0x6e, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x6d, 0x73, 0x69, 0x73, 0x64, 0x6e, 0x73,
	0x76, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_msisdnsvc_proto_rawDescOnce sync.Once
	file_msisdnsvc_proto_rawDescData = file_msisdnsvc_proto_rawDesc
)

func file_msisdnsvc_proto_rawDescGZIP() []byte {
	file_msisdnsvc_proto_rawDescOnce.Do(func() {
		file_msisdnsvc_proto_rawDescData = protoimpl.X.CompressGZIP(file_msisdnsvc_proto_rawDescData)
	})
	return file_msisdnsvc_proto_rawDescData
}

var file_msisdnsvc_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_msisdnsvc_proto_goTypes = []interface{}{
	(*MsisdnRequest)(nil), // 0: msisdn.MsisdnRequest
	(*Msisdn)(nil),        // 1: msisdn.Msisdn
}
var file_msisdnsvc_proto_depIdxs = []int32{
	0, // 0: msisdn.MsisdnService.GetMsisdnDetails:input_type -> msisdn.MsisdnRequest
	1, // 1: msisdn.MsisdnService.GetMsisdnDetails:output_type -> msisdn.Msisdn
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_msisdnsvc_proto_init() }
func file_msisdnsvc_proto_init() {
	if File_msisdnsvc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_msisdnsvc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsisdnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msisdnsvc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Msisdn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_msisdnsvc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_msisdnsvc_proto_goTypes,
		DependencyIndexes: file_msisdnsvc_proto_depIdxs,
		MessageInfos:      file_msisdnsvc_proto_msgTypes,
	}.Build()
	File_msisdnsvc_proto = out.File
	file_msisdnsvc_proto_rawDesc = nil
	file_msisdnsvc_proto_goTypes = nil
	file_msisdnsvc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MsisdnServiceClient is the client API for MsisdnService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsisdnServiceClient interface {
	//Get msisdn details
	GetMsisdnDetails(ctx context.Context, in *MsisdnRequest, opts ...grpc.CallOption) (*Msisdn, error)
}

type msisdnServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMsisdnServiceClient(cc grpc.ClientConnInterface) MsisdnServiceClient {
	return &msisdnServiceClient{cc}
}

func (c *msisdnServiceClient) GetMsisdnDetails(ctx context.Context, in *MsisdnRequest, opts ...grpc.CallOption) (*Msisdn, error) {
	out := new(Msisdn)
	err := c.cc.Invoke(ctx, "/msisdn.MsisdnService/GetMsisdnDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsisdnServiceServer is the server API for MsisdnService service.
type MsisdnServiceServer interface {
	//Get msisdn details
	GetMsisdnDetails(context.Context, *MsisdnRequest) (*Msisdn, error)
}

// UnimplementedMsisdnServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMsisdnServiceServer struct {
}

func (*UnimplementedMsisdnServiceServer) GetMsisdnDetails(context.Context, *MsisdnRequest) (*Msisdn, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMsisdnDetails not implemented")
}

func RegisterMsisdnServiceServer(s *grpc.Server, srv MsisdnServiceServer) {
	s.RegisterService(&_MsisdnService_serviceDesc, srv)
}

func _MsisdnService_GetMsisdnDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsisdnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsisdnServiceServer).GetMsisdnDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/msisdn.MsisdnService/GetMsisdnDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsisdnServiceServer).GetMsisdnDetails(ctx, req.(*MsisdnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MsisdnService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "msisdn.MsisdnService",
	HandlerType: (*MsisdnServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMsisdnDetails",
			Handler:    _MsisdnService_GetMsisdnDetails_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "msisdnsvc.proto",
}
